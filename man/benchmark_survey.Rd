% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survey_functions.R
\name{benchmark_survey}
\alias{benchmark_survey}
\title{Benchmark (for survey weights)}
\usage{
benchmark_survey(
  omit,
  formula,
  weights,
  pop_svy,
  sample_svy,
  Y,
  population_targets = NULL,
  weighting_method = "raking"
)
}
\arguments{
\item{omit}{Variable to benchmark}

\item{formula}{Raking formula}

\item{weights}{A vector, containing the estimated survey weights}

\item{pop_svy}{Survey object, containing the population the survey sample is being re-weighted to}

\item{sample_svy}{Survey object, containing the survey sample being re-weighted}

\item{Y}{outcome of interest}

\item{population_targets}{Population targets for the raking formula (optional, if not provided, will be generated from pop_svy)}

\item{weighting_method}{Weighting method (default to raking)}
}
\value{
Benchmarking results for a variable (or subset of variables)
}
\description{
Returns benchmarking results for survey weighting
}
\examples{

data(ces)
data(wapo)
wapo_srs <- survey::svydesign(ids = ~ 1, data = wapo)
ces_awt <- survey::svydesign(ids = ~ 1,
                     weights = ~ vvweight_post,
                     data = ces)

#Set up raking formula:
formula_rake <- ~ age_buckets + educ + gender + race + educ * pid + bornagain

#Generate targets:
targets_rake <- create_targets(ces_awt, formula_rake)

#PERFORM RAKING:
model_rake <- survey::calibrate(
  design = wapo_srs,
  formula = formula_rake,
  population = targets_rake,
  calfun = "raking",
  force = TRUE
)

rake_results <- survey::svydesign( ~ 1, data = wapo, weights = stats::weights(model_rake))
#Estimate from raking results:
weights = stats::weights(rake_results) * nrow(model_rake)
#Normalize to mean 1:
weights = weights / mean(weights)

unweighted_estimate = survey::svymean(~ candidate, wapo_srs, na.rm = TRUE)
weighted_estimate = survey::svymean(~ candidate, model_rake, na.rm = TRUE)
benchmark_survey('educ', 
 formula = formula_rake,
 weights = weights,
 pop_svy = ces_awt,
 sample_svy = wapo_srs,
 Y = wapo$candidate,
 )
 
}
